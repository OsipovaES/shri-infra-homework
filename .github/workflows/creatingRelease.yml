name: Creating a release

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.14.0"
      - run: npm install
      - run: npm run lint
      - run: npm test

  build_and_push:
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.14.0"
      - run: npm install
      - run: npm run build
      - name: Log in to Yandex Container Registry
        run: echo "${{ secrets.YANDEX_OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
      - name: Build image
        run: | 
          docker build \
          -t cr.yandex/crpkbossnpt5f3uj93p2/app:${{ github.run_number }} \
          -t cr.yandex/crpkbossnpt5f3uj93p2/app:${{ github.run_number }}_latest . 
         
      - name: Push Docker image to Yandex Container Registry
        run: |
          docker push --all-tags cr.yandex/crpkbossnpt5f3uj93p2/app
      - name: Set up Git user
        run: |
          git config --global user.email "elizaosipovaa@yandex.ru"
          git config --global user.name "Eliza"
      - name: Create Release Branch and Tag
        run: |
          git checkout -b releases/${{ github.run_number }}
          git push origin releases/${{ github.run_number }}
          git tag -a v${{ github.run_number }} -m "Release ${{ github.run_number }}"
          git push origin --tags
      - name: Set Date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Create Release Label
        run: |
          gh label create "release-${{ github.run_number }}" || echo "Label already exists"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Update changelog
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0)
          echo "Latest tag: $latest_tag"
          echo "## Release ${{ github.run_number }} - $(date)" > temp_CHANGELOG.md
          echo >> temp_CHANGELOG.md
          git log --pretty=format:"- %s" $latest_tag..HEAD >> temp_CHANGELOG.md
          echo >> temp_CHANGELOG.md
          echo "Current CHANGELOG.md content:"
          cat CHANGELOG.md
          cat CHANGELOG.md >> temp_CHANGELOG.md
          mv temp_CHANGELOG.md CHANGELOG.md
          echo "Updated CHANGELOG.md content:"
          cat CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for release ${{ github.run_number }}"
          git push origin releases/${{ github.run_number }}
